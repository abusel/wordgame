{"version":3,"sources":["logo.svg","Components/previousGuess.js","Components/previousGuesses.js","Components/guess.js","Pages/Curdle.js","App.js","reportWebVitals.js","index.js"],"names":["PreviousGuess","guess","colorObj","0","1","2","style","display","justifyContent","letterSpacing","map","letter","color","toUpperCase","PreviousGuesses","guesses","useEffect","console","log","Guess","setGuess","game","word","setGuesses","onSubmit","e","preventDefault","length","toLowerCase","TextField","id","label","variant","value","onChange","target","Curdle","useState","flexDirection","secret","output","hashMap","i","indexOf","find","arr","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcd3594b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function PreviousGuess({ guess }) {\n  let colorObj = {\n    0: \"black\",\n    1: \"#FFD300\",\n    2: \"green\",\n  };\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        letterSpacing: \"1rem\",\n      }}\n    >\n      {guess.map((letter) => {\n        return (\n          <div>\n            <p\n              style={{\n                color: colorObj[letter[1]],\n              }}\n            >\n              {letter[0].toUpperCase()}\n            </p>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\nexport default PreviousGuess;\n","import PreviousGuess from \"./previousGuess\";\nimport { useEffect } from \"react\";\n\nfunction PreviousGuesses({ guesses }) {\n  useEffect(() => {\n    console.log(guesses);\n  }, [guesses]);\n\n  return (\n    <div>\n      {guesses.map((guess) => {\n        return <PreviousGuess guess={guess} />;\n      })}\n    </div>\n  );\n}\nexport default PreviousGuesses;\n","import TextField from \"@mui/material/TextField\";\n\nfunction Guess({ guess, setGuess, game, word, guesses, setGuesses }) {\n  return (\n    <div style={{ justifyContent: \"center\", display: \"flex\" }}>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          if (guess.length === 5) {\n            setGuesses([...guesses, game(guess.toLowerCase(), word)]);\n            setGuess(\"\");\n          }\n        }}\n      >\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Guess\"\n          variant=\"outlined\"\n          value={guess}\n          onChange={(e) => {\n            if (e.target.value.length <= 5) {\n              setGuess(e.target.value);\n            }\n          }}\n        />\n      </form>\n    </div>\n  );\n}\nexport default Guess;\n","import PreviousGuesses from \"../Components/previousGuesses\";\nimport { useState } from \"react\";\nimport Guess from \"../Components/guess\";\n\nfunction Curdle() {\n  const [guess, setGuess] = useState(\"\");\n  const [guesses, setGuesses] = useState([]);\n  let word = \"colby\";\n  function game(guess, secret) {\n    let bulls = 0;\n    let cows = 0;\n    let output = [];\n    let hashMap = {};\n    for (let i = 0; i < secret.length; i++) {\n      if (!hashMap[secret[i]]) {\n        hashMap[secret[i]] = 1;\n      } else {\n        hashMap[secret[i]]++;\n      }\n    }\n\n    for (let i = 0; i < guess.length; i++) {\n      if (guess[i] === secret[i]) {\n        bulls++;\n        if (hashMap[guess[i]] === 0) {\n          console.log(output);\n          output[\n            output.indexOf(\n              output.find((arr) => {\n                return arr[0] === guess[i];\n              })\n            )\n          ] = [guess[i], 0];\n        }\n        hashMap[guess[i]]--;\n        output.push([guess[i], 2]);\n      } else if (hashMap[guess[i]] > 0) {\n        cows++;\n        hashMap[guess[i]]--;\n        output.push([guess[i], 1]);\n      } else {\n        output.push([guess[i], 0]);\n      }\n    }\n\n    return output;\n  }\n  return (\n    <div>\n      <h1\n        style={{\n          justifyContent: \"center\",\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n      >\n        Curdle\n      </h1>\n      <PreviousGuesses guesses={guesses} />\n      <Guess\n        guess={guess}\n        setGuess={setGuess}\n        game={game}\n        word={word}\n        guesses={guesses}\n        setGuesses={setGuesses}\n      />\n    </div>\n  );\n}\nexport default Curdle;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Curdle from \"./Pages/Curdle\";\n\nfunction App() {\n  return (\n    <div>\n      <Curdle />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}