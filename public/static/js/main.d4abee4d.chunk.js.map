{"version":3,"sources":["logo.svg","Components/previousGuess.js","Components/previousGuesses.js","Components/keyboard.js","Components/guess.js","Pages/Curdle.js","App.js","reportWebVitals.js","index.js"],"names":["PreviousGuess","guess","colorObj","0","1","2","style","display","justifyContent","letterSpacing","map","letter","color","toUpperCase","PreviousGuesses","guesses","useEffect","console","log","Keyboard","setGuess","lettersGuessed","letterClass","lClass","className","split","onClick","length","Guess","game","word","setGuesses","onSubmit","e","preventDefault","toLowerCase","TextField","id","label","variant","value","onChange","target","Curdle","useState","setLettersGuessed","forEach","flexDirection","secret","output","hashMap","i","indexOf","find","arr","push","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4abee4d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function PreviousGuess({ guess }) {\n  let colorObj = {\n    0: \"black\",\n    1: \"#FFD300\",\n    2: \"green\",\n  };\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        letterSpacing: \"1rem\",\n      }}\n    >\n      {guess.map((letter) => {\n        return (\n          <div>\n            <p\n              style={{\n                color: colorObj[letter[1]],\n              }}\n            >\n              {letter[0].toUpperCase()}\n            </p>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\nexport default PreviousGuess;\n","import PreviousGuess from \"./previousGuess\";\nimport { useEffect } from \"react\";\n\nfunction PreviousGuesses({ guesses }) {\n  useEffect(() => {\n    console.log(guesses);\n  }, [guesses]);\n\n  return (\n    <div>\n      {guesses.map((guess) => {\n        return <PreviousGuess guess={guess} />;\n      })}\n    </div>\n  );\n}\nexport default PreviousGuesses;\n","function Keyboard({ setGuess, guess, lettersGuessed }) {\n  let topRow = \"qwertyuiop\";\n  let middleRow = \"asdfghjkl\";\n  let bottomRow = \"zxcvbnm\";\n  function letterClass(letter) {\n    let lClass = \"letter\";\n    if (lettersGuessed[letter] === 0) {\n      lClass += \" crossed\";\n    } else if (lettersGuessed[letter] === 1) {\n      lClass += \" yellow\";\n    } else if (lettersGuessed[letter] === 2) {\n      lClass += \" green\";\n    }\n    return lClass;\n  }\n\n  return (\n    <div className=\"keyboard\">\n      <div className=\"row\">\n        {topRow.split(\"\").map((letter) => {\n          return (\n            <button\n              className={letterClass(letter)}\n              onClick={() => {\n                if (guess.length < 5) {\n                  setGuess((guess) => guess + letter);\n                }\n              }}\n            >\n              {letter}\n            </button>\n          );\n        })}\n      </div>\n      <div className=\"row\">\n        {middleRow.split(\"\").map((letter) => {\n          return (\n            <button\n              className={letterClass(letter)}\n              onClick={() => {\n                if (guess.length < 5) {\n                  setGuess((guess) => guess + letter);\n                }\n              }}\n            >\n              {letter}\n            </button>\n          );\n        })}\n      </div>\n      <div className=\"row\">\n        {bottomRow.split(\"\").map((letter) => {\n          return (\n            <button\n              className={letterClass(letter)}\n              onClick={() => {\n                if (guess.length < 5) {\n                  setGuess((guess) => guess + letter);\n                }\n              }}\n            >\n              {letter}\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\nexport default Keyboard;\n","import TextField from \"@mui/material/TextField\";\n\nfunction Guess({ guess, setGuess, game, word, guesses, setGuesses }) {\n  return (\n    <div style={{ justifyContent: \"center\", display: \"flex\" }}>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          if (guess.length === 5) {\n            setGuesses([...guesses, game(guess.toLowerCase(), word)]);\n            setGuess(\"\");\n          }\n        }}\n      >\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Guess\"\n          variant=\"outlined\"\n          value={guess}\n          onChange={(e) => {\n            if (e.target.value.length <= 5) {\n              setGuess(e.target.value);\n            }\n          }}\n        />\n      </form>\n    </div>\n  );\n}\nexport default Guess;\n","import PreviousGuesses from \"../Components/previousGuesses\";\nimport Keyboard from \"../Components/keyboard\";\nimport { useState, useEffect } from \"react\";\nimport Guess from \"../Components/guess\";\n\nfunction Curdle() {\n  const [guess, setGuess] = useState(\"\");\n  const [guesses, setGuesses] = useState([]);\n  const [lettersGuessed, setLettersGuessed] = useState({});\n  let alphabet = \"qwertyuiopasdfghjklzxcvbnm\";\n  useEffect(() => {\n    alphabet.split(\"\").forEach((letter) => {\n      setLettersGuessed((lettersGuessed) => {\n        return { ...lettersGuessed, [letter]: 3 };\n      });\n    });\n  }, []);\n  useEffect(() => {\n    console.log(lettersGuessed);\n  }, [lettersGuessed]);\n\n  let word = \"colby\";\n  function game(guess, secret) {\n    let bulls = 0;\n    let cows = 0;\n    let output = [];\n    let hashMap = {};\n    for (let i = 0; i < secret.length; i++) {\n      if (!hashMap[secret[i]]) {\n        hashMap[secret[i]] = 1;\n      } else {\n        hashMap[secret[i]]++;\n      }\n    }\n\n    for (let i = 0; i < guess.length; i++) {\n      if (guess[i] === secret[i]) {\n        let placeholder = { ...lettersGuessed };\n        bulls++;\n        if (hashMap[guess[i]] === 0) {\n          output[\n            output.indexOf(\n              output.find((arr) => {\n                return arr[0] === guess[i];\n              })\n            )\n          ] = [guess[i], 0];\n        }\n        hashMap[guess[i]]--;\n        output.push([guess[i], 2]);\n      } else if (hashMap[guess[i]] > 0) {\n        cows++;\n        hashMap[guess[i]]--;\n        output.push([guess[i], 1]);\n      } else {\n        let placeholder = { ...lettersGuessed };\n        placeholder[guess[i]] = 0;\n\n        output.push([guess[i], 0]);\n      }\n    }\n    let placeholder = { ...lettersGuessed };\n    output.forEach((letter) => {\n      console.log(letter);\n\n      if (letter[1] === 0 && placeholder[letter[0]] === 3) {\n        placeholder[letter[0]] = 0;\n      } else if (letter[1] === 2) {\n        placeholder[letter[0]] = 2;\n      } else if (letter[1] === 1 && placeholder[letter[0]] !== 2) {\n        placeholder[letter[0]] = 1;\n      }\n    });\n    setLettersGuessed(placeholder);\n    return output;\n  }\n  return (\n    <div>\n      <h1\n        style={{\n          justifyContent: \"center\",\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n      >\n        Curdle\n      </h1>\n      <PreviousGuesses guesses={guesses} />\n      <Guess\n        guess={guess}\n        setGuess={setGuess}\n        game={game}\n        word={word}\n        guesses={guesses}\n        setGuesses={setGuesses}\n      />\n\n      <Keyboard\n        setGuess={setGuess}\n        guess={guess}\n        lettersGuessed={lettersGuessed}\n      />\n    </div>\n  );\n}\nexport default Curdle;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Curdle from \"./Pages/Curdle\";\n\nfunction App() {\n  return (\n    <div>\n      <Curdle />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}